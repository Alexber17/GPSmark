{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderbermudez/Desktop/project/Project5/GPSmark/gpsmark/src/components/EditPlace.js\";\nimport React, { Component } from \"react\";\nimport { withScriptjs } from \"react-google-maps\";\nimport MapShow from \"../components/MapShow\";\n\nclass EditPlace extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Places: [],\n      nick_name: \"\",\n      addrees: \"\",\n      img: \"\",\n      showThisMap: {}\n    };\n\n    this.handleChange = event => {\n      console.log(event.target.value); // this.state.value = event.target.value;\n\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.getplaces = () => {\n      fetch(\"http://localhost:3000/places/1\").then(response => response.json()).then(json => {\n        this.setState({\n          Places: json\n        });\n        return json;\n      }).then(json => {\n        const places = {};\n        json.forEach(place => {\n          places[place.id] = false;\n        });\n        this.setState({\n          showThisMap: places\n        });\n      }) // .then(playlist => console.log(this.state.playlist))\n      .catch(error => console.error(error));\n    };\n\n    this.showMap = id => {\n      const showThisMap = { ...this.state.showThisMap\n      };\n\n      for (const i in showThisMap) {\n        showThisMap[i] = false;\n      }\n\n      showThisMap[id] = true;\n      this.setState({\n        showThisMap: { ...this.state.showThisMap,\n          ...showThisMap\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getplaces();\n  }\n\n  render() {\n    console.log(this.state.Places);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, this.state.Places.map((places, index) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        key: places.id,\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }\n      }, \"Title: \", places.nick_name), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 33\n        }\n      }, \"Address: \", places.addrees), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => this.showMap(places.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }\n      }, \"Edit\"), this.state.showThisMap[places.id] ? /*#__PURE__*/React.createElement(UpdatePlaces, {\n        place: places,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 70\n        }\n      }) : ''));\n    }));\n  }\n\n}\n\nclass UpdatePlaces extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Places: [this.props.place],\n      nick_name: \"\",\n      addrees: \"\",\n      img: \"\"\n    };\n\n    this.handleChange = event => {\n      console.log(event.target.value); // this.state.value = event.target.value;\n\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.handleSubmit = (event, item) => {\n      event.preventDefault();\n      fetch(\"http://localhost:3000/users/1/places\", {\n        body: JSON.stringify({\n          nick_name: this.state.nick_name,\n          addrees: this.state.addrees,\n          img: this.state.img\n        }),\n        method: \"PUT\",\n        headers: {\n          Accept: \"application/json, text/plain, */*\",\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(newTodo => {\n        this.setState({\n          Places: [newTodo, ...this.state.Places],\n          nick_name: \"\",\n          addrees: \"\",\n          img: \"\"\n        });\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state.Places);\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"nick_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      value: this.state.nick_name,\n      onChange: this.handleChange,\n      id: \"nick_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"addrees\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, \"address\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.addrees,\n      onChange: this.handleChange,\n      id: \"addrees\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      classNameName: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, \"img\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.img,\n      onChange: this.handleChange,\n      id: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default EditPlace;","map":{"version":3,"sources":["/Users/alexanderbermudez/Desktop/project/Project5/GPSmark/gpsmark/src/components/EditPlace.js"],"names":["React","Component","withScriptjs","MapShow","EditPlace","state","Places","nick_name","addrees","img","showThisMap","handleChange","event","console","log","target","value","setState","id","getplaces","fetch","then","response","json","places","forEach","place","catch","error","showMap","i","componentDidMount","render","map","index","UpdatePlaces","props","handleSubmit","item","preventDefault","body","JSON","stringify","method","headers","Accept","newTodo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { withScriptjs } from \"react-google-maps\";\nimport MapShow from \"../components/MapShow\";\nclass EditPlace extends Component {\n    state = {\n        Places: [],\n        nick_name: \"\",\n        addrees: \"\",\n        img: \"\",\n        showThisMap: {}\n    };\n\n    handleChange = (event) => {\n        console.log(event.target.value);\n        // this.state.value = event.target.value;\n        this.setState({ [event.target.id]: event.target.value });\n    };\n\n    componentDidMount() {\n        this.getplaces();\n    }\n\n    getplaces = () => {\n        fetch(\"http://localhost:3000/places/1\")\n            .then((response) => response.json())\n            .then((json) => {\n                this.setState({\n                    Places: json\n                })\n                return json\n            })\n            .then((json) => {\n                const places = {}\n                json.forEach(place => {\n                    places[place.id] = false\n                });\n                this.setState({ showThisMap: places })\n            })\n            // .then(playlist => console.log(this.state.playlist))\n            .catch((error) => console.error(error));\n    };\n\n    showMap = (id) => {\n        const showThisMap = { ...this.state.showThisMap }\n\n        for (const i in showThisMap) {\n            showThisMap[i] = false\n        }\n        showThisMap[id] = true\n        this.setState({ showThisMap: { ...this.state.showThisMap, ...showThisMap } })\n\n    }\n\n\n\n    render() {\n        console.log(this.state.Places)\n        return (\n            <div>\n                {this.state.Places.map((places, index) => {\n                    return (\n                        <>\n\n                            <div key={places.id} className='container'>\n                                <h4>Title: {places.nick_name}</h4>\n                                <h4 >Address: {places.addrees}</h4>\n                                <button className=\"btn btn-primary\" onClick={() => this.showMap(places.id)}  >Edit</button>\n                                {this.state.showThisMap[places.id] ? <UpdatePlaces place={places} ></UpdatePlaces> : ''}\n\n\n\n                            </div>\n                        </>\n                    )\n\n                })}\n            </div>\n        )\n\n    }\n}\n\n\nclass UpdatePlaces extends Component {\n    state = {\n        Places: [this.props.place],\n        nick_name: \"\",\n        addrees: \"\",\n        img: \"\",\n    };\n\n    handleChange = (event) => {\n        console.log(event.target.value);\n        // this.state.value = event.target.value;\n        this.setState({ [event.target.id]: event.target.value });\n    };\n\n    handleSubmit = (event, item) => {\n        event.preventDefault();\n        fetch(\"http://localhost:3000/users/1/places\", {\n            body: JSON.stringify({\n                nick_name: this.state.nick_name,\n                addrees: this.state.addrees,\n                img: this.state.img,\n            },\n\n            ),\n            method: \"PUT\",\n            headers: {\n                Accept: \"application/json, text/plain, */*\",\n                \"Content-Type\": \"application/json\",\n            },\n        })\n            .then((response) => response.json())\n            .then((newTodo) => {\n                this.setState({\n                    Places: [newTodo, ...this.state.Places],\n                    nick_name: \"\",\n                    addrees: \"\",\n                    img: \"\",\n                });\n            });\n    };\n\n    render() {\n        console.log(this.state.Places)\n        return (\n\n\n            <form onSubmit={this.handleSubmit}>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"nick_name\">Title</label>\n                    <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        value={this.state.nick_name}\n                        onChange={this.handleChange}\n                        id=\"nick_name\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"addrees\">address</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={this.state.addrees}\n                        onChange={this.handleChange}\n                        id=\"addrees\"\n                    />\n                </div>\n\n                <div classNameName=\"form-group\">\n                    <label htmlFor=\"img\">img</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={this.state.img}\n                        onChange={this.handleChange}\n                        id=\"img\"\n                    />\n                </div>\n                <br />\n                <input className=\"btn btn-primary\" type=\"submit\" />\n\n\n            </form>\n\n\n        );\n    }\n}\n\n\n\n\n\nexport default EditPlace;\n"]},"metadata":{},"sourceType":"module"}