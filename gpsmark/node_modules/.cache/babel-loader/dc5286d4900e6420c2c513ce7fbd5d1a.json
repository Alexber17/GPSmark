{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderbermudez/Desktop/project/Project5/GPSmark/gpsmark/src/components/MapShow.js\";\n\n/*global google*/\nimport React, { Component } from \"react\";\nimport { Marker, withGoogleMap, withScriptjs, GoogleMap, DirectionsRenderer } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nGeocode.setApiKey(\"AIzaSyCTIuglr0yoyg7N3YinUj0xEeKmQCA8VT0\");\nGeocode.enableDebug();\n\nclass Mapshow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      directions: [],\n      destination: \"\",\n      latOrigin: 0,\n      lngOrigin: 0,\n      latDestin: 0,\n      lngDestin: 0,\n      destinationAddress: this.props.place.place\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.geoDestiny();\n    };\n\n    this.geoDestiny = () => {\n      Geocode.fromAddress(this.state.destinationAddress).then(response => {\n        let {\n          lat,\n          lng\n        } = response.results[0].geometry.location;\n        this.setState({\n          latDestin: lat,\n          lngDestin: lng\n        });\n        console.log(this.state.latDestin, this.state.lngDestin);\n        this.getpositon();\n      }, error => {\n        console.error(error);\n      });\n    };\n\n    this.displayLocationInfo = position => {\n      let lng2 = position.coords.longitude;\n      let lat2 = position.coords.latitude;\n      console.log(`longitude: ${lat2} | latitude: ${lng2}`);\n      this.setState({\n        latOrigin: lat2,\n        lngOrigin: lng2\n      });\n      console.log(\"disply\" + this.state.lat);\n      this.loadMap();\n    };\n\n    this.getpositon = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(this.displayLocationInfo);\n      }\n    };\n\n    this.loadMap = () => {\n      console.log(`origin lat: ${this.state.latOrigin}, lng: ${this.state.lngOrigin} `);\n      console.log(`Destino lat:  ${this.state.latDestin}, lng: ${this.state.lngDestin} `);\n      let origin = {\n        lat: this.state.latOrigin,\n        lng: this.state.lngOrigin\n      };\n      let destination = {\n        lat: this.state.latDestin,\n        lng: this.state.lngDestin\n      };\n      const directionsService = new google.maps.DirectionsService();\n      directionsService.route({\n        origin: origin,\n        destination: destination,\n        travelMode: google.maps.TravelMode.DRIVING\n      }, (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          console.log(result);\n          this.setState({\n            directions: result\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.getpositon();\n      console.log(\"component\" + this.state.lat);\n    };\n  }\n\n  render() {\n    const GoogleMapExample = withGoogleMap(props => /*#__PURE__*/React.createElement(GoogleMap, {\n      defaultCenter: {\n        lat: this.state.latOrigin,\n        lng: this.state.lngOrigin\n      },\n      defaultZoom: 13,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DirectionsRenderer, {\n      directions: this.state.directions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Marker, {\n      lat: this.state.latOrigin,\n      lng: this.state.lngOrigin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    })));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"lable\", {\n      htmlFor: \"description\",\n      className: \"col-sm-1 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, \"Destination Address: \", this.props.place.place), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-sm-11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      value: this.state.destinationAddress,\n      className: \"form-control\",\n      id: \"destinationAddress\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, \"Create\", \" \")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(GoogleMapExample, {\n      containerElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: `500px`,\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 29\n        }\n      }),\n      mapElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: `100%`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 23\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, \".\", this.state.directions.routes ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, this.state.directions.routes[0].legs[0].end_address), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, this.state.directions.routes[0].legs[0].distance.text), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, this.state.directions.routes[0].legs[0].duration.text), this.state.directions.routes[0].legs[0].steps.map(elemen => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"directions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: elemen.instructions\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }), \" \"))) : \"\"));\n  }\n\n}\n\nexport default Mapshow;","map":{"version":3,"sources":["/Users/alexanderbermudez/Desktop/project/Project5/GPSmark/gpsmark/src/components/MapShow.js"],"names":["React","Component","Marker","withGoogleMap","withScriptjs","GoogleMap","DirectionsRenderer","Geocode","setApiKey","enableDebug","Mapshow","state","directions","destination","latOrigin","lngOrigin","latDestin","lngDestin","destinationAddress","props","place","handleChange","e","setState","target","id","value","handleSubmit","event","preventDefault","geoDestiny","fromAddress","then","response","lat","lng","results","geometry","location","console","log","getpositon","error","displayLocationInfo","position","lng2","coords","longitude","lat2","latitude","loadMap","navigator","geolocation","getCurrentPosition","origin","directionsService","google","maps","DirectionsService","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","componentDidMount","render","GoogleMapExample","height","width","routes","legs","end_address","distance","text","duration","steps","map","elemen","__html","instructions"],"mappings":"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","sourcesContent":["/*global google*/\nimport React, { Component } from \"react\";\nimport {\n  Marker,\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  DirectionsRenderer,\n} from \"react-google-maps\";\n\nimport Geocode from \"react-geocode\";\n\nGeocode.setApiKey(\"AIzaSyCTIuglr0yoyg7N3YinUj0xEeKmQCA8VT0\");\nGeocode.enableDebug();\n\nclass Mapshow extends React.Component {\n  state = {\n    directions: [],\n    destination: \"\",\n    latOrigin: 0,\n    lngOrigin: 0,\n    latDestin: 0,\n    lngDestin: 0,\n    destinationAddress: this.props.place.place,\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.geoDestiny();\n  };\n\n  geoDestiny = () => {\n    Geocode.fromAddress(this.state.destinationAddress).then(\n      (response) => {\n        let { lat, lng } = response.results[0].geometry.location;\n        this.setState({\n          latDestin: lat,\n          lngDestin: lng,\n        });\n        console.log(this.state.latDestin, this.state.lngDestin);\n        this.getpositon();\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  };\n\n  displayLocationInfo = (position) => {\n    let lng2 = position.coords.longitude;\n    let lat2 = position.coords.latitude;\n    console.log(`longitude: ${lat2} | latitude: ${lng2}`);\n    this.setState({\n      latOrigin: lat2,\n      lngOrigin: lng2,\n    });\n    console.log(\"disply\" + this.state.lat);\n\n    this.loadMap();\n  };\n\n  getpositon = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.displayLocationInfo);\n    }\n  };\n\n  loadMap = () => {\n    console.log(\n      `origin lat: ${this.state.latOrigin}, lng: ${this.state.lngOrigin} `\n    );\n    console.log(\n      `Destino lat:  ${this.state.latDestin}, lng: ${this.state.lngDestin} `\n    );\n\n    let origin = { lat: this.state.latOrigin, lng: this.state.lngOrigin };\n    let destination = { lat: this.state.latDestin, lng: this.state.lngDestin };\n    const directionsService = new google.maps.DirectionsService();\n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        travelMode: google.maps.TravelMode.DRIVING,\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          console.log(result);\n          this.setState({\n            directions: result,\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    this.getpositon();\n    console.log(\"component\" + this.state.lat);\n  };\n\n  render() {\n    const GoogleMapExample = withGoogleMap((props) => (\n      <GoogleMap\n        defaultCenter={{ lat: this.state.latOrigin, lng: this.state.lngOrigin }}\n        defaultZoom={13}\n      >\n        <DirectionsRenderer directions={this.state.directions} />\n        <Marker lat={this.state.latOrigin} lng={this.state.lngOrigin} />\n      </GoogleMap>\n    ));\n\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <lable htmlFor=\"description\" className=\"col-sm-1 col-form-label\">\n              Destination Address: {this.props.place.place}\n            </lable>\n            <div class=\"col-sm-11\">\n              <input\n                type=\"text\"\n                required\n                value={this.state.destinationAddress}\n                className=\"form-control\"\n                id=\"destinationAddress\"\n                onChange={this.handleChange}\n              />\n            </div>\n            <br />\n            <div class=\"col-10\">\n              <button type=\"submit\" class=\"btn btn-primary\">\n                Create{\" \"}\n              </button>\n            </div>\n            <br />\n          </div>\n        </form>\n        <GoogleMapExample\n          containerElement={<div style={{ height: `500px`, width: \"100%\" }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        ></GoogleMapExample>\n\n\n\n        <div>.\n       \n          {this.state.directions.routes\n            ? <>\n            <h3>{this.state.directions.routes[0].legs[0].end_address}</h3>\n            <h6>{this.state.directions.routes[0].legs[0].distance.text}</h6>\n            <h6>{this.state.directions.routes[0].legs[0].duration.text}</h6>\n          \n            {this.state.directions.routes[0].legs[0].steps.map((elemen) => (\n              <div className=\"directions\" >\n                {\" \"}\n                <p\n                  dangerouslySetInnerHTML={{ __html: elemen.instructions }}\n                />{\" \"}\n              </div>\n            ))}\n            </>: \"\"}\n        </div>\n      </div >\n    );\n  }\n}\n\nexport default Mapshow;\n"]},"metadata":{},"sourceType":"module"}