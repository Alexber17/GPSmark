{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderbermudez/Desktop/project/Project5/GPSmark/gpsmark/src/components/DeletePlace.js\";\nimport React, { Component } from \"react\";\nimport { withScriptjs } from \"react-google-maps\";\nimport MapShow from \"../components/MapShow\";\n\nclass DeletePlace extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Places: [],\n      nick_name: \"\",\n      addrees: \"\",\n      img: \"\",\n      showThisMap: {}\n    };\n\n    this.handleChange = event => {\n      console.log(event.target.value); // this.state.value = event.target.value;\n\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.getplaces = () => {\n      fetch(\"http://localhost:3000/places/1\").then(response => response.json()).then(json => {\n        this.setState({\n          Places: json\n        });\n        return json;\n      }).catch(error => console.error(error));\n    };\n\n    this.deletePlace = id => {\n      fetch(`http://localhost:3000/places/${id}`, {\n        method: 'DELETE'\n      }).then(resp => resp.json()).then(resp => {\n        console.log('helo', resp);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getplaces();\n  }\n\n  deleteEmployee(id) {\n    fetch(`http://localhost:3000/places/${id}`, {\n      method: 'DELETE'\n    }).then(resp => resp.json()).then(resp => {\n      console.log(\"the list after deleting...\", resp); // Please use `this.setState()` with the above \"resp\" here to reset your employee list, \n      // I think it's gonna be the same just like when you render your employee for the first time\n    });\n  }\n\n  render() {\n    console.log(this.state.Places);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, this.state.Places.map((places, index) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        key: places.id,\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }\n      }, \"Title: \", places.nick_name), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }, \"Address: \", places.addrees), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => this.deleteEmployee(places.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }\n      }, \"Delete\")));\n    }));\n  }\n\n}\n\nfunction MapApp(place) {\n  const MapLoader = withScriptjs(MapShow);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MapLoader, {\n    place: place,\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCTIuglr0yoyg7N3YinUj0xEeKmQCA8VT0\",\n    loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: `150%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default DeletePlace;","map":{"version":3,"sources":["/Users/alexanderbermudez/Desktop/project/Project5/GPSmark/gpsmark/src/components/DeletePlace.js"],"names":["React","Component","withScriptjs","MapShow","DeletePlace","state","Places","nick_name","addrees","img","showThisMap","handleChange","event","console","log","target","value","setState","id","getplaces","fetch","then","response","json","catch","error","deletePlace","method","resp","componentDidMount","deleteEmployee","render","map","places","index","MapApp","place","MapLoader","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { withScriptjs } from \"react-google-maps\";\nimport MapShow from \"../components/MapShow\";\n\n\nclass DeletePlace extends Component {\n    state = {\n        Places: [],\n        nick_name: \"\",\n        addrees: \"\",\n        img: \"\",\n        showThisMap: {}\n    };\n\n    handleChange = (event) => {\n        console.log(event.target.value);\n        // this.state.value = event.target.value;\n        this.setState({ [event.target.id]: event.target.value });\n    };\n\n    componentDidMount() {\n        this.getplaces();\n    }\n\n    getplaces = () => {\n        fetch(\"http://localhost:3000/places/1\")\n            .then((response) => response.json())\n            .then((json) => {\n                this.setState({\n                    Places: json\n                })\n                return json\n            })\n\n            .catch((error) => console.error(error));\n    };\n\n    deletePlace = (id) => {\n        fetch(`http://localhost:3000/places/${id}`, { method: 'DELETE' })\n            .then((resp) => resp.json())\n            .then((resp) => {\n                console.log('helo', resp)\n\n            })\n    }\n    deleteEmployee(id) {\n        fetch(`http://localhost:3000/places/${id}`, {\n            method: 'DELETE',\n\n        }).then(resp => resp.json())\n            .then((resp) => {\n                console.log(\"the list after deleting...\", resp);\n                // Please use `this.setState()` with the above \"resp\" here to reset your employee list, \n                // I think it's gonna be the same just like when you render your employee for the first time\n            });\n\n    }\n\n\n    render() {\n        console.log(this.state.Places)\n        return (\n            <div>\n                {this.state.Places.map((places, index) => {\n                    return (\n                        <>\n\n                            <div key={places.id} className='container'>\n                                <h4>Title: {places.nick_name}</h4>\n                                <h4 >Address: {places.addrees}</h4>\n                                <button className=\"btn btn-primary\" onClick={() => this.deleteEmployee(places.id)}  >Delete</button>\n\n\n\n\n                            </div>\n                        </>\n                    )\n\n                })}\n            </div>\n        )\n\n    }\n}\n\n\nfunction MapApp(place) {\n    const MapLoader = withScriptjs(MapShow);\n    return (\n        <div className=\"App\">\n\n            <MapLoader\n                place={place}\n                googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCTIuglr0yoyg7N3YinUj0xEeKmQCA8VT0\"\n                loadingElement={<div style={{ height: `150%` }} />}\n            />\n        </div>\n    );\n}\n\n\nexport default DeletePlace;"]},"metadata":{},"sourceType":"module"}