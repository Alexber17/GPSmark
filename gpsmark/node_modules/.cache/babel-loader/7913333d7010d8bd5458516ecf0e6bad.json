{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderbermudez/Desktop/project/Project5/GPSmark/gpsmark/src/components/Map.js\";\n\n/*global google*/\nimport React, { Component } from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport { withGoogleMap, withScriptjs, GoogleMap, DirectionsRenderer } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nGeocode.setApiKey(\"AIzaSyCTIuglr0yoyg7N3YinUj0xEeKmQCA8VT0\");\nGeocode.enableDebug();\nconst MyMapComponent = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\",\n  loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }),\n  containerElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"400px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 23\n    }\n  }),\n  mapElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  })\n}), withScriptjs, withGoogleMap)(props => /*#__PURE__*/React.createElement(GoogleMap, {\n  defaultZoom: 8,\n  defaultCenter: {\n    lat: -34.397,\n    lng: 150.644\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(DirectionsRenderer, {\n  directions: this.state.directions,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }\n})));\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      directions: [],\n      destination: \"\",\n      latOrigin: 0,\n      lngOrigin: 0,\n      latDestin: 0,\n      lngDestin: 0,\n      destinationAddress: \"\"\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // this.setState({\n      //   destinationAddress: this.state.destinationAddress,\n      // });\n\n      console.log(this.state.destinationAddress);\n      this.geoDestiny();\n    };\n\n    this.geoDestiny = () => {\n      Geocode.fromAddress(this.state.destinationAddress).then(response => {\n        let {\n          lat,\n          lng\n        } = response.results[0].geometry.location;\n        this.setState({\n          latDestin: lat,\n          lngDestin: lng\n        });\n        console.log(this.state.latDestin, this.state.lngDestin);\n      }, error => {\n        console.error(error);\n      });\n    };\n\n    this.displayLocationInfo = position => {\n      let lng2 = position.coords.longitude;\n      let lat2 = position.coords.latitude;\n      console.log(`longitude: ${lat2} | latitude: ${lng2}`);\n      this.setState({\n        latOrigin: lat2,\n        lngOrigin: lng2\n      });\n      console.log(\"disply\" + this.state.lat);\n      this.loadMap();\n    };\n\n    this.getpositon = () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(this.displayLocationInfo);\n      }\n    };\n\n    this.loadMap = () => {\n      console.log(`origin lat: ${this.state.latOrigin}, lng: ${this.state.lngOrigin} `);\n      console.log(`Destino lat:  ${this.state.latDestin}, lng: ${this.state.lngDestin} `);\n      let origin = {\n        lat: this.state.latOrigin,\n        lng: this.state.lngOrigin\n      };\n      let destination = {\n        lat: this.state.latDestin,\n        lng: this.state.lngDestin\n      };\n      const directionsService = new google.maps.DirectionsService();\n      directionsService.route({\n        origin: origin,\n        destination: destination,\n        travelMode: google.maps.TravelMode.DRIVING\n      }, (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.setState({\n            directions: result\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      });\n    };\n\n    this.componentDidMount = () => {\n      console.log(\"component\" + this.state.lat);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, this.state.destinationAddress != \"\" ? /*#__PURE__*/React.createElement(MyMapComponent, {\n      isMarkerShown: true,\n      onMarkerClick: this.handleMarkerClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"lable\", {\n      htmlFor: \"description\",\n      className: \"col-sm-1 col-form-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, \"Destination Address:\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-sm-11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      required: true,\n      value: this.state.destinationAddress,\n      className: \"form-control\",\n      id: \"destinationAddress\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-sm-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, \"Create\", \" \")))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, this.state.directions.routes ? this.state.directions.routes[0].legs[0].steps.map(elemen => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: elemen.instructions\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    }), \" \")) : \"\"));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/alexanderbermudez/Desktop/project/Project5/GPSmark/gpsmark/src/components/Map.js"],"names":["React","Component","compose","withProps","withGoogleMap","withScriptjs","GoogleMap","DirectionsRenderer","Geocode","setApiKey","enableDebug","MyMapComponent","googleMapURL","loadingElement","height","containerElement","mapElement","props","lat","lng","state","directions","Map","destination","latOrigin","lngOrigin","latDestin","lngDestin","destinationAddress","handleChange","e","setState","target","id","value","handleSubmit","event","preventDefault","console","log","geoDestiny","fromAddress","then","response","results","geometry","location","error","displayLocationInfo","position","lng2","coords","longitude","lat2","latitude","loadMap","getpositon","navigator","geolocation","getCurrentPosition","origin","directionsService","google","maps","DirectionsService","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","componentDidMount","render","handleMarkerClick","routes","legs","steps","map","elemen","__html","instructions"],"mappings":"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","sourcesContent":["/*global google*/\nimport React, { Component } from \"react\";\nimport { compose, withProps } from \"recompose\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  DirectionsRenderer,\n} from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\n\nGeocode.setApiKey(\"AIzaSyCTIuglr0yoyg7N3YinUj0xEeKmQCA8VT0\");\nGeocode.enableDebug();\n\nconst MyMapComponent = compose(\n  withProps({\n    googleMapURL:\n      \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: \"100%\" }} />,\n    containerElement: <div style={{ height: \"400px\" }} />,\n    mapElement: <div style={{ height: \"100%\" }} />,\n  }),\n  withScriptjs,\n  withGoogleMap\n)((props) => (\n  <GoogleMap defaultZoom={8} defaultCenter={{ lat: -34.397, lng: 150.644 }}>\n    <DirectionsRenderer directions={this.state.directions} />\n  </GoogleMap>\n));\n\nclass Map extends React.Component {\n  state = {\n    directions: [],\n    destination: \"\",\n    latOrigin: 0,\n    lngOrigin: 0,\n    latDestin: 0,\n    lngDestin: 0,\n    destinationAddress: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    // this.setState({\n    //   destinationAddress: this.state.destinationAddress,\n    // });\n    console.log(this.state.destinationAddress);\n    this.geoDestiny();\n  };\n\n  geoDestiny = () => {\n    Geocode.fromAddress(this.state.destinationAddress).then(\n      (response) => {\n        let { lat, lng } = response.results[0].geometry.location;\n        this.setState({\n          latDestin: lat,\n          lngDestin: lng,\n        });\n        console.log(this.state.latDestin, this.state.lngDestin);\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  };\n\n  displayLocationInfo = (position) => {\n    let lng2 = position.coords.longitude;\n    let lat2 = position.coords.latitude;\n    console.log(`longitude: ${lat2} | latitude: ${lng2}`);\n    this.setState({\n      latOrigin: lat2,\n      lngOrigin: lng2,\n    });\n    console.log(\"disply\" + this.state.lat);\n\n    this.loadMap();\n  };\n\n  getpositon = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.displayLocationInfo);\n    }\n  };\n\n  loadMap = () => {\n    console.log(\n      `origin lat: ${this.state.latOrigin}, lng: ${this.state.lngOrigin} `\n    );\n    console.log(\n      `Destino lat:  ${this.state.latDestin}, lng: ${this.state.lngDestin} `\n    );\n\n    let origin = { lat: this.state.latOrigin, lng: this.state.lngOrigin };\n    let destination = { lat: this.state.latDestin, lng: this.state.lngDestin };\n    const directionsService = new google.maps.DirectionsService();\n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        travelMode: google.maps.TravelMode.DRIVING,\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.setState({\n            directions: result,\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    console.log(\"component\" + this.state.lat);\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.destinationAddress != \"\" ? (\n          <MyMapComponent\n            isMarkerShown={true}\n            onMarkerClick={this.handleMarkerClick}\n          />\n        ) : (\n          \"\"\n        )}\n\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <lable htmlFor=\"description\" className=\"col-sm-1 col-form-label\">\n              Destination Address:\n            </lable>\n            <div class=\"col-sm-11\">\n              <input\n                type=\"text\"\n                required\n                value={this.state.destinationAddress}\n                className=\"form-control\"\n                id=\"destinationAddress\"\n                onChange={this.handleChange}\n              />\n            </div>\n            <div class=\"col-sm-10\">\n              <button type=\"submit\" class=\"btn btn-primary\">\n                Create{\" \"}\n              </button>\n            </div>\n          </div>\n        </form>\n        <div>\n          {this.state.directions.routes\n            ? this.state.directions.routes[0].legs[0].steps.map((elemen) => (\n                <div>\n                  {\" \"}\n                  <p\n                    dangerouslySetInnerHTML={{ __html: elemen.instructions }}\n                  />{\" \"}\n                </div>\n              ))\n            : \"\"}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}