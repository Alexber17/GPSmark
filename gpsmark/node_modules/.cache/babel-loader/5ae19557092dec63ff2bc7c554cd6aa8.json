{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderbermudez/Desktop/project/Project5/gpsmark/src/components/Map.js\";\n\n/*global google*/\nimport React, { Component } from \"react\";\nimport { withGoogleMap, withScriptjs, GoogleMap, DirectionsRenderer } from \"react-google-maps\";\nimport DirectionInstructions from './Instructions.js';\n\nclass Map extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      directions: [],\n      directionsLocal: [],\n      lat: 0,\n      lng: 0\n    };\n\n    this.componentDidMount = () => {\n      let origin = {};\n      let destination = {\n        lat: 41.756795,\n        lng: -78.954298\n      };\n      console.log('helo' + this.state.lat);\n\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(displayLocationInfo);\n\n        function displayLocationInfo(position) {\n          const lng1 = position.coords.longitude;\n          const lat1 = position.coords.latitude;\n          console.log(`longitude: ${lat1} | latitude: ${lat1}`);\n\n          if (lng1 != undefined && lat1 != undefined) {\n            this.setState({\n              lat: lat1,\n              lng: lng1\n            });\n          }\n        }\n      }\n\n      console.log(origin);\n\n      if (origin != '' && destination != '') {}\n\n      const directionsService = new google.maps.DirectionsService(); //   if(lng == '' ){\n      //   }\n\n      directionsService.route({\n        origin: origin,\n        destination: destination,\n        travelMode: google.maps.TravelMode.DRIVING\n      }, (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.setState({\n            directions: result\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      });\n    };\n  }\n\n  render() {\n    const GoogleMapExample = withGoogleMap(props => /*#__PURE__*/React.createElement(GoogleMap, {\n      defaultCenter: {\n        lat: 40.756795,\n        lng: -73.954298\n      },\n      defaultZoom: 13,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DirectionsRenderer, {\n      directions: this.state.directions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }))); // console.log(this.state.directions)\n    // if(this.state.directions.routes ){\n    //     console.log('routes ',this.state.directions.routes[0].legs[0].steps[0].instructions)\n    // }\n    // {console.log(this.state.directions.routes)}\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(GoogleMapExample, {\n      containerElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: `500px`,\n          width: \"500px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 54\n        }\n      }),\n      mapElement: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: `100%`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 23\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 8\n      }\n    }, this.state.directions.routes ? this.state.directions.routes[0].legs[0].steps.map(elemen => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 102\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: elemen.instructions\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 108\n      }\n    }), \" \")) : ''));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/alexanderbermudez/Desktop/project/Project5/gpsmark/src/components/Map.js"],"names":["React","Component","withGoogleMap","withScriptjs","GoogleMap","DirectionsRenderer","DirectionInstructions","Map","state","directions","directionsLocal","lat","lng","componentDidMount","origin","destination","console","log","navigator","geolocation","getCurrentPosition","displayLocationInfo","position","lng1","coords","longitude","lat1","latitude","undefined","setState","directionsService","google","maps","DirectionsService","route","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","error","render","GoogleMapExample","props","height","width","routes","legs","steps","map","elemen","__html","instructions"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,SAHF,EAIEC,kBAJF,QAKO,mBALP;AAMA,OAAOC,qBAAP,MAAkC,mBAAlC;;AAMA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BO,KAD0B,GAClB;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,eAAe,EAAE,EAFX;AAGNC,MAAAA,GAAG,EAAC,CAHE;AAINC,MAAAA,GAAG,EAAC;AAJE,KADkB;;AAAA,SAU1BC,iBAV0B,GAUR,MAAK;AACrB,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIC,WAAW,GAAG;AAAEJ,QAAAA,GAAG,EAAE,SAAP;AAAkBC,QAAAA,GAAG,EAAE,CAAC;AAAxB,OAAlB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAO,KAAKT,KAAL,CAAWG,GAA9B;;AACA,UAAIO,SAAS,CAACC,WAAd,EAA2B;AACvBD,QAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,mBAAzC;;AAGF,iBAASA,mBAAT,CAA6BC,QAA7B,EAAuC;AACrC,gBAAMC,IAAI,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,SAA7B;AACA,gBAAMC,IAAI,GAAGJ,QAAQ,CAACE,MAAT,CAAgBG,QAA7B;AAEAX,UAAAA,OAAO,CAACC,GAAR,CAAa,cAAcS,IAAM,gBAAgBA,IAAM,EAAvD;;AAGF,cAAIH,IAAI,IAAIK,SAAR,IAAqBF,IAAI,IAAIE,SAAjC,EAA8C;AAE5C,iBAAKC,QAAL,CAAc;AACVlB,cAAAA,GAAG,EAACe,IADM;AAEVd,cAAAA,GAAG,EAACW;AAFM,aAAd;AAID;AAEA;AACF;;AACCP,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AAGF,UAAGA,MAAM,IAAI,EAAV,IAAgBC,WAAW,IAAG,EAAjC,EAAqC,CAAE;;AAGvC,YAAMe,iBAAiB,GAAI,IAAIC,MAAM,CAACC,IAAP,CAAYC,iBAAhB,EAA3B,CA/BqB,CAgCrB;AAEA;;AAGAH,MAAAA,iBAAiB,CAACI,KAAlB,CACE;AACEpB,QAAAA,MAAM,EAAEA,MADV;AAEEC,QAAAA,WAAW,EAAEA,WAFf;AAGEoB,QAAAA,UAAU,EAAEJ,MAAM,CAACC,IAAP,CAAYI,UAAZ,CAAuBC;AAHrC,OADF,EAME,CAACC,MAAD,EAASC,MAAT,KAAoB;AAClB,YAAIA,MAAM,KAAKR,MAAM,CAACC,IAAP,CAAYQ,gBAAZ,CAA6BC,EAA5C,EAAgD;AAC9C,eAAKZ,QAAL,CAAc;AACZpB,YAAAA,UAAU,EAAE6B;AADA,WAAd;AAID,SALD,MAKO;AACLtB,UAAAA,OAAO,CAAC0B,KAAR,CAAe,6BAA4BJ,MAAO,EAAlD;AACD;AACF,OAfH;AAkBD,KAjEyB;AAAA;;AAmE1BK,EAAAA,MAAM,GAAG;AACP,UAAMC,gBAAgB,GAAG1C,aAAa,CAAC2C,KAAK,iBAC1C,oBAAC,SAAD;AACE,MAAA,aAAa,EAAE;AAAElC,QAAAA,GAAG,EAAE,SAAP;AAAkBC,QAAAA,GAAG,EAAE,CAAC;AAAxB,OADjB;AAEE,MAAA,WAAW,EAAE,EAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,kBAAD;AAAoB,MAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWC,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADoC,CAAtC,CADO,CAUP;AAEA;AAGA;AAEA;AAEA;;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,gBAAD;AAA2B,MAAA,gBAAgB,eAAE;AAAK,QAAA,KAAK,EAAE;AAAEqC,UAAAA,MAAM,EAAG,OAAX;AAAmBC,UAAAA,KAAK,EAAE;AAA1B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA7C;AACE,MAAA,UAAU,eAAE;AAAK,QAAA,KAAK,EAAE;AAAED,UAAAA,MAAM,EAAG;AAAX,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKtC,KAAL,CAAWC,UAAX,CAAsBuC,MAAtB,GAA+B,KAAKxC,KAAL,CAAWC,UAAX,CAAsBuC,MAAtB,CAA6B,CAA7B,EAAgCC,IAAhC,CAAqC,CAArC,EAAwCC,KAAxC,CAA8CC,GAA9C,CAAmDC,MAAD,iBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAM;AAAG,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAED,MAAM,CAACE;AAAjB,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAN,MAA9D,CAA/B,GAA4K,EAD7K,CARD,CADF;AAeD;;AAtGyB;;AAyG5B,eAAe/C,GAAf","sourcesContent":["/*global google*/\nimport React, { Component } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  DirectionsRenderer\n} from \"react-google-maps\";\nimport DirectionInstructions from './Instructions.js'\n\n\n\n\n\nclass Map extends Component {\n  state = {\n    directions: [],\n    directionsLocal: [],\n    lat:0,\n    lng:0\n  };\n\n\n\n  componentDidMount=()=> {\n    let origin = {};\n    let destination = { lat: 41.756795, lng: -78.954298 };\n    console.log('helo'+this.state.lat)\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(displayLocationInfo);\n     \n      \n      function displayLocationInfo(position) {\n        const lng1 = position.coords.longitude;\n        const lat1 = position.coords.latitude;\n\n        console.log(`longitude: ${ lat1 } | latitude: ${ lat1 }`);\n\n        \n      if( lng1 != undefined && lat1 != undefined )  {\n       \n        this.setState({\n            lat:lat1,\n            lng:lng1 \n        })\n      }\n\n      }\n    }\n      console.log(origin)\n\n\n    if(origin != '' && destination !='' ){}\n\n\n    const directionsService =  new google.maps.DirectionsService();\n    //   if(lng == '' ){\n\n    //   }\n\n\n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        travelMode: google.maps.TravelMode.DRIVING\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.setState({\n            directions: result\n\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n\n  }\n\n  render() {\n    const GoogleMapExample = withGoogleMap(props => (\n      <GoogleMap\n        defaultCenter={{ lat: 40.756795, lng: -73.954298 }}\n        defaultZoom={13}\n      > \n        <DirectionsRenderer directions={this.state.directions}/>\n       \n      </GoogleMap>\n    ));\n    // console.log(this.state.directions)\n\n    // if(this.state.directions.routes ){\n       \n\n    //     console.log('routes ',this.state.directions.routes[0].legs[0].steps[0].instructions)\n        \n    // }\n    \n    // {console.log(this.state.directions.routes)}\n    return (\n      <div>\n             \n\n        \n\n        <GoogleMapExample          containerElement={<div style={{ height: `500px`, width: \"500px\" }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n       <div>\n       {this.state.directions.routes ? this.state.directions.routes[0].legs[0].steps.map((elemen)=> (<div> <p dangerouslySetInnerHTML={{ __html: elemen.instructions }}/> </div>)) :''}\n       </div>\n         \n      </div>\n    );\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}